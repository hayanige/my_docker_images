name: Build Hadoop Docker Image
run-name: 'Build Hadoop: ${{ github.event.head_commit.message || github.ref_name }}'

on:
  push:
    branches: [ main ]
    paths:
      - 'images/hadoop/**'
      - '.github/workflows/build-hadoop.yml'
      - '.github/workflows/reusable-docker-build.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'images/hadoop/**'
      - '.github/workflows/build-hadoop.yml'
      - '.github/workflows/reusable-docker-build.yml'
  workflow_dispatch:
    inputs:
      build_method:
        description: 'ビルド方法を選択 (download: 高速なバイナリダウンロード, source: ソースからビルド)'
        required: true
        default: 'download'
        type: choice
        options:
          - download
          - source
      hadoop_ref:
        description: 'Hadoopのソースブランチ/タグ (`source`ビルド時のみ有効)'
        required: false
        default: 'rel/release-3.4.1'
        type: string
      hadoop_version:
        description: 'Hadoopのバージョン (`download`ビルドやタグ付けで利用)'
        required: false
        default: '3.4.1'
        type: string

env:
  # workflow_dispatch の入力、またはデフォルト値を設定
  HADOOP_VERSION: ${{ github.event.inputs.hadoop_version || '3.4.1' }}
  HADOOP_REF: ${{ github.event.inputs.hadoop_ref || 'rel/release-3.4.1' }}

jobs:
  prepare:
    # ソースビルド時はARMランナー、それ以外は標準ランナーを使用
    runs-on: ${{ (github.event.inputs.build_method == 'source' && 'ubuntu-22.04-arm') || 'ubuntu-latest' }}
    outputs:
      hadoop_version: ${{ env.HADOOP_VERSION }}
      hadoop_tarball_name: ${{ steps.tarball_info.outputs.name }}
    steps:
      - name: Checkout Dockerfile repository
        uses: actions/checkout@v4

      # --- Fast path: Download pre-built binary ---
      - name: Download pre-built Hadoop binary
        if: github.event.inputs.build_method == 'download' || github.event_name != 'workflow_dispatch'
        run: |
          echo "Downloading Hadoop version ${{ env.HADOOP_VERSION }}..."
          curl -fsSL "https://dlcdn.apache.org/hadoop/common/hadoop-${{ env.HADOOP_VERSION }}/hadoop-${{ env.HADOOP_VERSION }}.tar.gz" -o images/hadoop/hadoop-release.tar.gz
          echo "Download complete."

      # --- Slow path: Build from source ---
      - name: Checkout Apache Hadoop repository
        if: github.event.inputs.build_method == 'source'
        uses: actions/checkout@v4
        with:
          repository: apache/hadoop
          ref: ${{ env.HADOOP_REF }}
          path: hadoop-src

      - name: Set up JDK 11
        if: github.event.inputs.build_method == 'source'
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        if: github.event.inputs.build_method == 'source'
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          # GITHUB_REF_NAME を使うことで、どのイベントでも安定したキーを生成
          key: ${{ runner.os }}-maven-hadoop-${{ env.HADOOP_REF }}-${{ hashFiles('hadoop-src/**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-hadoop-${{ env.HADOOP_REF }}-

      - name: Build Hadoop from source
        if: github.event.inputs.build_method == 'source'
        working-directory: hadoop-src
        run: mvn clean package -Pdist -DskipTests -Dtar -Dmaven.javadoc.skip=true -B

      - name: Move tarball to Docker build context
        if: github.event.inputs.build_method == 'source'
        run: |
          find hadoop-src/hadoop-dist/target -name "hadoop-*.tar.gz" -exec mv {} images/hadoop/hadoop-release.tar.gz \;

      - name: Get tarball filename
        id: tarball_info
        run: echo "name=hadoop-release.tar.gz" >> $GITHUB_OUTPUT

      - name: Upload build context artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-context
          path: images/hadoop

  build:
    needs: prepare
    permissions:
      contents: read
      packages: write
    uses: ./.github/workflows/reusable-docker-build.yml
    with:
      workflow_name: 'Build Hadoop Docker Image'
      image_name: 'terrestrials/hadoop'
      image_context: 'images/hadoop'
      image_version: ${{ needs.prepare.outputs.hadoop_version }}
      build_args: |
        HADOOP_TARBALL=${{ needs.prepare.outputs.hadoop_tarball_name }}
        OZONE_TAG=latest
    secrets: inherit