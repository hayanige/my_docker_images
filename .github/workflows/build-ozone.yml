name: Build Ozone Docker Image
run-name: 'Build Ozone: ${{ github.event.head_commit.message || github.ref_name }}'

on:
  push:
    branches: [ main ]
    paths:
      - 'images/ozone/**'
      - '.github/workflows/build-ozone.yml'
      - '.github/workflows/reusable-docker-build.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'images/ozone/**'
      - '.github/workflows/build-ozone.yml'
      - '.github/workflows/reusable-docker-build.yml'
  workflow_dispatch:
    inputs:
      ozone_ref:
        description: 'Ozone repository ref (branch/tag/commit)'
        required: false
        default: 'ozone-2.0.0'
        type: string

env:
  OZONE_VERSION: '2.0.0'

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      ozone_version: ${{ env.OZONE_VERSION }}
    steps:
      - name: Checkout Dockerfile repository
        uses: actions/checkout@v4

      - name: Checkout Apache Ozone repository
        uses: actions/checkout@v4
        with:
          repository: apache/ozone
          ref: ${{ github.event.inputs.ozone_ref || 'ozone-2.0.0' }}
          path: ozone-src

      - name: Install protoc compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ozone-${{ github.event.inputs.ozone_ref || 'ozone-2.0.0' }}-${{ hashFiles('ozone-src/**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-ozone-${{ github.event.inputs.ozone_ref || 'ozone-2.0.0' }}-

      - name: Build Ozone from source
        working-directory: ozone-src
        run: |
          mvn clean package -DskipTests -Pdist -Dmaven.javadoc.skip=true -B

      - name: Move tarball to Docker build context
        run: find ozone-src/hadoop-ozone/dist/target -name "ozone-*.tar.gz" -exec mv {} images/ozone/ \;

      - name: Upload build context artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-context
          path: images/ozone

  build:
    needs: prepare
    permissions:
      contents: read
      packages: write
    uses: ./.github/workflows/reusable-docker-build.yml
    with:
      workflow_name: 'Build Ozone Docker Image'
      image_name: 'terrestrials/ozone'
      image_context: 'images/ozone'
      image_version: ${{ needs.prepare.outputs.ozone_version }}
      build_args: 'OZONE_TARBALL=ozone-*.tar.gz'
    secrets: inherit